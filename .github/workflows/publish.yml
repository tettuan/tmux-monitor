name: Publish to JSR

on:
  push:
    tags:
      - "v*"
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (e.g., 1.0.0)"
        required: true
        type: string

jobs:
  publish:
    name: Publish to JSR
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.4.0

      - name: Prepare publish directory
        run: |
          # Create a clean directory for publishing
          mkdir -p publish

          # Copy only the files we want to publish
          cp main.ts publish/
          cp mod.ts publish/
          cp -r src/ publish/
          cp LICENSE publish/
          cp README.md publish/

      - name: Create JSR configuration
        run: |
          cd publish
          # Extract version from tag (remove 'v' prefix if present)
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          VERSION=${VERSION#v}
          
          cat > deno.json << EOF
          {
            "name": "@aidevtool/tmux-monitor",
            "version": "$VERSION",
            "description": "A comprehensive tmux monitoring tool with totality principles, real-time monitoring, and keyboard interrupt handling",
            "license": "MIT",
            "author": "tettuan",
            "keywords": [
              "tmux",
              "monitor",
              "terminal",
              "session",
              "pane",
              "typescript",
              "deno",
              "cli"
            ],
            "repository": {
              "type": "git",
              "url": "git+https://github.com/${{ github.repository }}.git"
            },
            "exports": {
              ".": "./main.ts",
              "./lib": "./mod.ts",
              "./main": "./main.ts",
              "./cli": "./main.ts"
            },
            "bin": {
              "tmux-monitor": "./main.ts"
            },
            "compilerOptions": {
              "lib": ["deno.window"],
              "strict": true
            },
            "publish": {
              "include": [
                "mod.ts",
                "main.ts",
                "src/",
                "README.md",
                "LICENSE"
              ]
            }
          }
          EOF

      - name: Validate TypeScript
        run: |
          cd publish
          deno check mod.ts main.ts

      - name: Run tests (if any exist in src/)
        run: |
          cd publish
          # Only run tests if they exist and are not excluded
          if find src/ -name "*_test.ts" -type f | head -1 | grep -q .; then
            echo "Found test files in src/, running tests..."
            deno test --allow-all src/
          else
            echo "No test files found in src/ directory"
          fi

      - name: Publish to JSR
        run: |
          cd publish
          deno publish --allow-dirty

      - name: Create release summary
        run: |
          echo "## ðŸš€ Published to JSR" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package**: \`@aidevtool/tmux-monitor\`" >> $GITHUB_STEP_SUMMARY
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          VERSION=${VERSION#v}
          echo "**Version**: \`$VERSION\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Files included:" >> $GITHUB_STEP_SUMMARY
          echo "- \`main.ts\` - Main application entry point" >> $GITHUB_STEP_SUMMARY
          echo "- \`mod.ts\` - Library export module" >> $GITHUB_STEP_SUMMARY
          echo "- \`src/\` - Source code directory" >> $GITHUB_STEP_SUMMARY
          echo "- \`LICENSE\` - License file" >> $GITHUB_STEP_SUMMARY
          echo "- \`README.md\` - Documentation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Usage:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`typescript" >> $GITHUB_STEP_SUMMARY
          echo "import { createMonitorApp } from \"jsr:@aidevtool/tmux-monitor\";" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
